{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","GifGridItem","title","url","src","alt","style","height","maxWidth","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imagenes","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACM,0BAAMC,UAAU,eAAeC,SARhB,SAACC,GAClBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAO,IACxBT,GAAe,SAAAU,GAAC,OAAKR,GAAL,mBAAmBQ,OACnCP,EAAc,OAKd,sCAAYD,GACZ,2BAAOE,UAAU,qBAAqBO,KAAK,OAAOC,MAAOV,EAAYW,SAbnD,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,YCLlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,oCACI,yBAAKb,UAAU,YACX,yBAAKA,UAAU,0EACX,yBAAKc,IAAKD,EAAKE,IAAKH,EAAOI,MAAO,CAACC,OAAO,IAAKC,SAAS,4BACxD,4BAAS,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOR,SAAU,kB,uBCR5Be,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbR,EADa,iDACmCS,UAAUF,GAD7C,8DAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAKD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBnB,QATvB,kBAaZc,GAbY,4CAAH,sDCKPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZvB,mBAAS,CAC/B6B,KAAM,GACNQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAAAC,GACnBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGlB,CAACd,IAEGe,EDZ0BK,CAAapB,GAAlCmB,EADuB,EAC5Bb,KAAeQ,EADa,EACbA,QAEtB,OACI,oCACI,wBAAIlC,UAAU,qCAAqCoB,GAClDc,GAAW,uBAAGlC,UAAU,oCAAb,WAEX,yBAAKA,UAAU,kBAERuC,EAASX,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eAAaY,IAAKZ,EAAIC,IAAQD,SAKxCK,GAA6B,IAAlBK,EAASlC,QAAc,+CEM/BqC,EAvBW,SAAC,GAA4B,IAAD,IAA1BC,yBAA0B,MAAR,GAAQ,IAChB9C,mBAAW8C,EAAkBtC,OAAO,EAAKsC,EAAmB,CAAC,QAD7C,mBAC7CC,EAD6C,KACjChD,EADiC,KAMpD,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,yBAAKI,UAAU,gBAEP4C,EAAWhB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UCb1DyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.de09487e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) =>{   \r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{   \r\n        e.preventDefault(); \r\n        if(inputValue.trim().length>1){\r\n            setCategories( c => [inputValue,...c]);\r\n            setInputValue('');\r\n        }             \r\n    }\r\n    return (\r\n          <form className=\"w3-container\" onSubmit={handleSubmit}>\r\n            <p>Buscar: {inputValue}</p>\r\n            <input className=\"w3-input w3-border\" type=\"text\" value={inputValue} onChange={handleInputChange} />  \r\n          </form>\r\n    )\r\n}\r\n    \r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <>        \r\n            <div className=\"w3-third\">\r\n                <div className=\"w3-card w3-center animate__animated animate__slideInUp animate__faster\">\r\n                    <img src={url} alt={title} style={{height:200, maxWidth:\"-webkit-fill-available\"}} />\r\n                    <p>{title?.trim() || \"Sin titulo\"}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nGifGridItem.propTypes={\r\n    title : PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=9&api_key=qd4DlV9TePPxA6lZjIthQOWtlzh1ZMzl`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs=data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:imagenes, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            {<div className=\"w3-row-padding\">\r\n                {\r\n                    imagenes.map((img) => (\r\n                        <GifGridItem key={img.id} {...img}/>\r\n                    )) \r\n                }\r\n            </div>}\r\n            \r\n            {!loading && imagenes.length===0 && <p>Sin resultados</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes={\r\n    category: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imagenes=>{\r\n            setstate({\r\n                data: imagenes,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state; // {data: [], loading: true};\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ({defaultCategories=[]}) => {\r\n    const [categories, setCategories] = useState( (defaultCategories.length>0) ? defaultCategories: [\"oso\"]);\r\n      \r\n    //setCategories([...categories, \"Gatos\"]);\r\n    //setCategories( c => [...c, \"Gatos\"]);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <div className=\"w3-container\">\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n  export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}